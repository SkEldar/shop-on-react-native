{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/eldarsalakhutdinov/coding/shop-on-react-native/app/components/AppPicker.js\";\nimport React, { useState } from \"react\";\nimport colors from \"../config/colors\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/AppText\";\nimport defaultStyles from \"../config/styles\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport PIckerItem from \"./PIckerItem\";\n\nfunction AppPicker(_ref) {\n  var _this = this;\n\n  var selectItem = _ref.selectItem,\n      onSelectItem = _ref.onSelectItem,\n      items = _ref.items,\n      icon = _ref.icon,\n      placeholder = _ref.placeholder;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(MaterialCommunityIcons, {\n    name: icon,\n    size: 20,\n    color: defaultStyles.colors.medium,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), selectItem ? React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, selectItem.label) : React.createElement(AppText, {\n    style: styles.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, placeholder), React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-down\",\n    size: 20,\n    color: defaultStyles.colors.medium,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))), React.createElement(Modal, {\n    visible: modalVisible,\n    animationType: \"slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"close\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(FlatList, {\n    data: items,\n    keyExtractor: function keyExtractor(item) {\n      return item.value;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PIckerItem, {\n        label: item.label,\n        onPress: function onPress() {\n          setModalVisible(false);\n          onSelectItem(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    width: \"100%\",\n    padding: 15,\n    marginVertical: 10\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    flex: 1\n  },\n  placeholder: {\n    color: defaultStyles.colors.medium,\n    flex: 1\n  }\n});\nexport default AppPicker;","map":{"version":3,"sources":["/Users/eldarsalakhutdinov/coding/shop-on-react-native/app/components/AppPicker.js"],"names":["React","useState","colors","Screen","AppText","defaultStyles","MaterialCommunityIcons","PIckerItem","AppPicker","selectItem","onSelectItem","items","icon","placeholder","modalVisible","setModalVisible","styles","container","medium","text","label","item","value","StyleSheet","create","backgroundColor","light","borderRadius","flexDirection","width","padding","marginVertical","marginRight","flex","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport colors from \"../config/colors\";\nimport {\n  FlatList,\n  Image,\n  View,\n  Button,\n  StyleSheet,\n  TouchableHighlight,\n  TextInput,\n  TouchableWithoutFeedback,\n  Modal,\n} from \"react-native\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/AppText\";\nimport defaultStyles from \"../config/styles\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport PIckerItem from \"./PIckerItem\";\n\nfunction AppPicker({ selectItem,onSelectItem,items, icon, placeholder,}) {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\n        <View style={styles.container}>\n          {icon && (\n            <MaterialCommunityIcons\n              name={icon}\n              size={20}\n              color={defaultStyles.colors.medium}\n              style={styles.icon}\n            />\n          )}\n\n          {selectItem ? (\n            <AppText style={styles.text}>\n            {selectItem.label}\n            </AppText>\n          ) : (\n            <AppText style={styles.placeholder}>\n            {placeholder}\n            </AppText>\n          )}\n          <MaterialCommunityIcons\n            name=\"chevron-down\"\n            size={20}\n            color={defaultStyles.colors.medium}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n      <Modal visible={modalVisible} animationType=\"slide\">\n        <Screen>\n          <Button title=\"close\" onPress={() => setModalVisible(false)} />\n          <FlatList \n            data={items}          \n            keyExtractor={item => item.value}\n            renderItem={({item}) => <PIckerItem \n            label={item.label}\n            onPress={() => {\n                setModalVisible(false);\n                onSelectItem(item);\n            }}\n            />}\n          />\n        </Screen>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    width: \"100%\",\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    flex: 1,\n  },\n  placeholder : {\n    color : defaultStyles.colors.medium,\n    flex : 1,\n  }\n});\n\nexport default AppPicker;\n"]},"metadata":{},"sourceType":"module"}